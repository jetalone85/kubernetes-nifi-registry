apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: nifi-registry
spec:
  serviceName: nifi-registry
  replicas: {{.replicas}}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nifi-registry
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - nifi-registry
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: nifi-registry
          image: {{.image}}
          resources:
            requests:
              memory: {{.memoryrequest}}
              cpu: {{.cpurequest}}
          imagePullPolicy: Always
          ports:
            - containerPort: 19090
          # volumeMounts:
            # - name: flowfilerepository
              # mountPath: /opt/nifi/flowfile_repository
          env:
            - name: NIFI_REGISTRY_WEB_HTTP_PORT
              value: "19090"
            - name: FLOW_PROVIDER
              value: "git"
            - name: GIT_REMOTE_URL
              value: "https://git-codecommit.eu-west-1.amazonaws.com/v1/repos/fandata-sso-nifi-registry"
            - name: GIT_CHECKOUT_BRANCH
              value: "master"
            - name: FLOW_PROVIDER_GIT_FLOW_STORAGE_DIRECTORY
              value: "/opt/nifi-registry/flow-storage-git"
            - name: FLOW_PROVIDER_GIT_REMOTE_TO_PUSH
              value: "origin"
            - name: FLOW_PROVIDER_GIT_REMOTE_ACCESS_USER
              value: "mpyrka-at-288379507323"
            - name: FLOW_PROVIDER_GIT_REMOTE_ACCESS_PASSWORD
              value: "r1w8G5sQv/CXXFkV0UjiYBk2G93ULPBCtqDExlEcdUc="
            - name: GIT_CONFIG_USER_NAME
              value: "APACHE NIFI REGISTRY"
            - name: GIT_CONFIG_USER_EMAIL
              value: ""
  # volumeClaimTemplates:
  # - metadata:
  #     name: flowfilerepository
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: {{.storage.size}}
  #     storageClassName: {{.storage.class}}